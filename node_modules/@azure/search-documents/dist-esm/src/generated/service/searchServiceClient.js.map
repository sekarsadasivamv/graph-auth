{"version":3,"file":"searchServiceClient.js","sourceRoot":"","sources":["../../../../src/generated/service/searchServiceClient.ts"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AAEH,OAAO,KAAK,QAAQ,MAAM,kBAAkB,CAAC;AAC7C,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AACnC,OAAO,KAAK,OAAO,MAAM,kBAAkB,CAAC;AAC5C,OAAO,KAAK,UAAU,MAAM,qBAAqB,CAAC;AAClD,OAAO,KAAK,UAAU,MAAM,cAAc,CAAC;AAC3C,OAAO,EAAE,0BAA0B,EAAE,MAAM,8BAA8B,CAAC;AAE1E,MAAM,mBAAoB,SAAQ,0BAA0B;IAQ1D;;;;;OAKG;IACH,YAAY,UAAkB,EAAE,QAAgB,EAAE,OAAuC;QACvF,KAAK,CAAC,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,WAAW,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,OAAO,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAiBD,oBAAoB,CAAC,OAA0F,EAAE,QAA6D;QAC5K,OAAO,IAAI,CAAC,oBAAoB,CAC9B;YACE,OAAO;SACR,EACD,iCAAiC,EACjC,QAAQ,CAAiD,CAAC;IAC9D,CAAC;CACF;AAED,2BAA2B;AAC3B,MAAM,UAAU,GAAG,IAAI,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACpD,MAAM,iCAAiC,GAA2B;IAChE,UAAU,EAAE,KAAK;IACjB,IAAI,EAAE,cAAc;IACpB,aAAa,EAAE;QACb,UAAU,CAAC,QAAQ;KACpB;IACD,eAAe,EAAE;QACf,UAAU,CAAC,UAAU;KACtB;IACD,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;KACF;IACD,UAAU;CACX,CAAC;AAEF,OAAO,EACL,mBAAmB,EACnB,0BAA0B,EAC1B,MAAM,IAAI,mBAAmB,EAC7B,OAAO,IAAI,oBAAoB,EAChC,CAAC;AACF,cAAc,cAAc,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as Parameters from \"./models/parameters\";\nimport * as operations from \"./operations\";\nimport { SearchServiceClientContext } from \"./searchServiceClientContext\";\n\nclass SearchServiceClient extends SearchServiceClientContext {\n  // Operation groups\n  dataSources: operations.DataSources;\n  indexers: operations.Indexers;\n  skillsets: operations.Skillsets;\n  synonymMaps: operations.SynonymMaps;\n  indexes: operations.Indexes;\n\n  /**\n   * Initializes a new instance of the SearchServiceClient class.\n   * @param apiVersion Client Api Version.\n   * @param endpoint The endpoint URL of the search service.\n   * @param [options] The parameter options\n   */\n  constructor(apiVersion: string, endpoint: string, options?: coreHttp.ServiceClientOptions) {\n    super(apiVersion, endpoint, options);\n    this.dataSources = new operations.DataSources(this);\n    this.indexers = new operations.Indexers(this);\n    this.skillsets = new operations.Skillsets(this);\n    this.synonymMaps = new operations.SynonymMaps(this);\n    this.indexes = new operations.Indexes(this);\n  }\n\n  /**\n   * Gets service level statistics for a search service.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.GetServiceStatisticsResponse>\n   */\n  getServiceStatistics(options?: coreHttp.RequestOptionsBase): Promise<Models.GetServiceStatisticsResponse>;\n  /**\n   * @param callback The callback\n   */\n  getServiceStatistics(callback: coreHttp.ServiceCallback<Models.ServiceStatistics>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getServiceStatistics(options: coreHttp.RequestOptionsBase, callback: coreHttp.ServiceCallback<Models.ServiceStatistics>): void;\n  getServiceStatistics(options?: coreHttp.RequestOptionsBase | coreHttp.ServiceCallback<Models.ServiceStatistics>, callback?: coreHttp.ServiceCallback<Models.ServiceStatistics>): Promise<Models.GetServiceStatisticsResponse> {\n    return this.sendOperationRequest(\n      {\n        options\n      },\n      getServiceStatisticsOperationSpec,\n      callback) as Promise<Models.GetServiceStatisticsResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers);\nconst getServiceStatisticsOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"servicestats\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceStatistics\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  serializer\n};\n\nexport {\n  SearchServiceClient,\n  SearchServiceClientContext,\n  Models as SearchServiceModels,\n  Mappers as SearchServiceMappers\n};\nexport * from \"./operations\";\n"]}