{"version":3,"file":"msal.service.d.ts","sources":["msal.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { UserAgentApplication, Configuration, AuthenticationParameters, AuthResponse, authResponseCallback, errorReceivedCallback, tokenReceivedCallback } from \"msal\";\r\nimport { Router } from \"@angular/router\";\r\nimport { BroadcastService } from \"./broadcast.service\";\r\nimport { MsalAngularConfiguration } from \"./msal-angular.configuration\";\r\nexport declare class MsalService extends UserAgentApplication {\r\n    private msalConfig;\r\n    private msalAngularConfig;\r\n    private router;\r\n    private broadcastService;\r\n    constructor(msalConfig: Configuration, msalAngularConfig: MsalAngularConfiguration, router: Router, broadcastService: BroadcastService);\r\n    private isUnprotectedResource;\r\n    private isEmpty;\r\n    loginPopup(request?: AuthenticationParameters): Promise<any>;\r\n    ssoSilent(request: AuthenticationParameters): Promise<AuthResponse>;\r\n    acquireTokenSilent(request: AuthenticationParameters): Promise<AuthResponse>;\r\n    acquireTokenPopup(request: AuthenticationParameters): Promise<AuthResponse>;\r\n    handleRedirectCallback(tokenReceivedCallback: tokenReceivedCallback, errorReceivedCallback: errorReceivedCallback): void;\r\n    handleRedirectCallback(authCallback: authResponseCallback): void;\r\n    clearCacheForScope(accessToken: string): void;\r\n    getScopesForEndpoint(endpoint: string): Array<string>;\r\n}\r\n"]}