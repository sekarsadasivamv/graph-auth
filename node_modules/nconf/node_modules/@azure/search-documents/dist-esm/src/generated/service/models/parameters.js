/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
export const allowIndexDowntime = {
    parameterPath: [
        "options",
        "allowIndexDowntime"
    ],
    mapper: {
        serializedName: "allowIndexDowntime",
        type: {
            name: "Boolean"
        }
    }
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const dataSourceName = {
    parameterPath: "dataSourceName",
    mapper: {
        required: true,
        serializedName: "dataSourceName",
        type: {
            name: "String"
        }
    }
};
export const endpoint = {
    parameterPath: "endpoint",
    mapper: {
        required: true,
        serializedName: "endpoint",
        defaultValue: '',
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const ifMatch = {
    parameterPath: [
        "options",
        "ifMatch"
    ],
    mapper: {
        serializedName: "If-Match",
        type: {
            name: "String"
        }
    }
};
export const ifNoneMatch = {
    parameterPath: [
        "options",
        "ifNoneMatch"
    ],
    mapper: {
        serializedName: "If-None-Match",
        type: {
            name: "String"
        }
    }
};
export const indexerName = {
    parameterPath: "indexerName",
    mapper: {
        required: true,
        serializedName: "indexerName",
        type: {
            name: "String"
        }
    }
};
export const indexName = {
    parameterPath: "indexName",
    mapper: {
        required: true,
        serializedName: "indexName",
        type: {
            name: "String"
        }
    }
};
export const prefer = {
    parameterPath: "prefer",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "Prefer",
        defaultValue: 'return=representation',
        type: {
            name: "String"
        }
    }
};
export const select = {
    parameterPath: [
        "options",
        "select"
    ],
    mapper: {
        serializedName: "$select",
        type: {
            name: "String"
        }
    }
};
export const skillsetName = {
    parameterPath: "skillsetName",
    mapper: {
        required: true,
        serializedName: "skillsetName",
        type: {
            name: "String"
        }
    }
};
export const synonymMapName = {
    parameterPath: "synonymMapName",
    mapper: {
        required: true,
        serializedName: "synonymMapName",
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map