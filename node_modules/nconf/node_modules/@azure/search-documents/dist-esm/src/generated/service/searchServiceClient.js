/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as coreHttp from "@azure/core-http";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as Parameters from "./models/parameters";
import * as operations from "./operations";
import { SearchServiceClientContext } from "./searchServiceClientContext";
class SearchServiceClient extends SearchServiceClientContext {
    /**
     * Initializes a new instance of the SearchServiceClient class.
     * @param apiVersion Client Api Version.
     * @param endpoint The endpoint URL of the search service.
     * @param [options] The parameter options
     */
    constructor(apiVersion, endpoint, options) {
        super(apiVersion, endpoint, options);
        this.dataSources = new operations.DataSources(this);
        this.indexers = new operations.Indexers(this);
        this.skillsets = new operations.Skillsets(this);
        this.synonymMaps = new operations.SynonymMaps(this);
        this.indexes = new operations.Indexes(this);
    }
    getServiceStatistics(options, callback) {
        return this.sendOperationRequest({
            options
        }, getServiceStatisticsOperationSpec, callback);
    }
}
// Operation Specifications
const serializer = new coreHttp.Serializer(Mappers);
const getServiceStatisticsOperationSpec = {
    httpMethod: "GET",
    path: "servicestats",
    urlParameters: [
        Parameters.endpoint
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ServiceStatistics
        },
        default: {
            bodyMapper: Mappers.SearchError
        }
    },
    serializer
};
export { SearchServiceClient, SearchServiceClientContext, Models as SearchServiceModels, Mappers as SearchServiceMappers };
export * from "./operations";
//# sourceMappingURL=searchServiceClient.js.map